<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>爱喝馄饨的小陈</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2024-09-18T10:58:06+08:00</updated> <author> <name>chengao</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2024 chengao </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>又记一次复杂项目迁移</title><link href="/posts/%E5%8F%88%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%A4%8D%E6%9D%82%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB/" rel="alternate" type="text/html" title="又记一次复杂项目迁移" /><published>2024-06-13T00:20:45+08:00</published> <updated>2024-06-13T00:20:45+08:00</updated> <id>/posts/%E5%8F%88%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%A4%8D%E6%9D%82%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB/</id> <content src="/posts/%E5%8F%88%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%A4%8D%E6%9D%82%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB/" /> <author> <name>chengao</name> </author> <summary> 前言 是的，项目迁移它又来了，还是22年那个项目，不同的是公司上了devops，所有组件都容器化了，免去了安装的过程，但是文件还得迁移那，又是罪恶滔天的fdfs，文件存的很凌乱，有的在富文本里有的在结构化数据库里，但不同的是我学会了python，py真的天下第一,太方便了家人们。这次解决问题的思路如下: 导出全量sql python正则选取文件url [re] 下载再上传 [requests、fdfs-client-py3==1.0.0] 全局替换文件url [pathlib2==2.3.7.post1] 进度条输出[tqdm==4.66.4] 相较于22年的那次迁移，这次避免了数据库交互，运用了py，极大地提升了效率 代码部分 1. 首先给到的是fdfs上传部分，需要两个配置文件对应A和B fdfs客户端，py3下载会有点问题，所以用了request库下... </summary> </entry> <entry><title>【源码分析】logback日志配置及存储</title><link href="/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-logback%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%AD%98%E5%82%A8/" rel="alternate" type="text/html" title="【源码分析】logback日志配置及存储" /><published>2024-04-11T11:12:07+08:00</published> <updated>2024-04-11T11:12:07+08:00</updated> <id>/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-logback%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%AD%98%E5%82%A8/</id> <content src="/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-logback%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%AD%98%E5%82%A8/" /> <author> <name>chengao</name> </author> <summary> 起因 linux系统中springboot日志文件默认存在/tmp下，那么为什么会存储在这个位置呢,查阅可知 org/springframework/boot/logging/logback/base.xml 进行了相关定义 同时查看logback日志配置文件会有疑问，有些变量取自于defauts.xml中自定义，这些日志中的变量到底哪里来的呢。 源码分析 AbstractLoggingSystem LogbackLoggingSystem LogbackLoggingSystem LogbackLoggingSystem </summary> </entry> <entry><title>python微信自动化框架wxauto进行消息采集转发</title><link href="/posts/python%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6wxauto%E8%BF%9B%E8%A1%8C%E6%B6%88%E6%81%AF%E9%87%87%E9%9B%86%E8%BD%AC%E5%8F%91/" rel="alternate" type="text/html" title="python微信自动化框架wxauto进行消息采集转发" /><published>2024-03-07T16:07:37+08:00</published> <updated>2024-04-11T11:59:55+08:00</updated> <id>/posts/python%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6wxauto%E8%BF%9B%E8%A1%8C%E6%B6%88%E6%81%AF%E9%87%87%E9%9B%86%E8%BD%AC%E5%8F%91/</id> <content src="/posts/python%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6wxauto%E8%BF%9B%E8%A1%8C%E6%B6%88%E6%81%AF%E9%87%87%E9%9B%86%E8%BD%AC%E5%8F%91/" /> <author> <name>chengao</name> </author> <summary> 需求 采集大群中含关键词的聊天记录，并进行自定义消息处理「脱敏、添加」，然后转发至指定群聊；同时存储信息至redis key为当天日期的set，判重发送 定时任务，每天定时发送公告，公告文件为txt 环境 微信版本: 3.9.8.15 python版本: 3.11.6 wxauto版本: 3.9.8 服务器版本: 阿里云 2核4g windows 2012 源码 from wxauto import WeChat import time import re import hashlib import redis import datetime import schedule # 实例化微信对象 wx = WeChat() listen_list = [ '采集群1' ] # 转发目标群 target_list = [ #'test', ] ... </summary> </entry> <entry><title>奇技淫巧之oauth2利用state传参</title><link href="/posts/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%E4%B9%8Boauth2%E5%88%A9%E7%94%A8state%E4%BC%A0%E5%8F%82/" rel="alternate" type="text/html" title="奇技淫巧之oauth2利用state传参" /><published>2023-08-22T16:12:25+08:00</published> <updated>2023-08-22T16:12:25+08:00</updated> <id>/posts/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%E4%B9%8Boauth2%E5%88%A9%E7%94%A8state%E4%BC%A0%E5%8F%82/</id> <content src="/posts/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%E4%B9%8Boauth2%E5%88%A9%E7%94%A8state%E4%BC%A0%E5%8F%82/" /> <author> <name>chengao</name> </author> <summary> 问题 公司多个子系统调用同一套oauth2认证，但是系统之间token是自定义的，现在需要A跳转到B指定页面，单点认证之后跳转的地址是固定的 解决办法 利用oauth2中的state参数，oauth官网上有这样一段 关于state描述的内容 如果客户端希望在重定向 URL 中包含特定于请求的数据，则可以使用“state”参数来存储用户重定向后将包含的数据。 它可以对状态参数本身中的数据进行编码，也可以使用状态参数作为会话 ID 将状态存储在服务器上。 步骤1 一般state用于状态认证，是用于防止跨站请求伪造攻击，通常，state 参数会随着授权请求一起发送到授权服务器，授权服务器会在回调时返回该参数，客户端需要验证该参数和发送时的是 否一致，以确保请求不是来自非法的攻击者。但是我们也可以利用state传递参数，我们在调用oauth2认证链接的时候将跳转地址传入注意需要将链接进... </summary> </entry> <entry><title>kkfile相关问题解决</title><link href="/posts/kkfile%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/" rel="alternate" type="text/html" title="kkfile相关问题解决" /><published>2023-05-17T11:05:50+08:00</published> <updated>2023-05-17T11:05:50+08:00</updated> <id>/posts/kkfile%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id> <content src="/posts/kkfile%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/" /> <author> <name>chengao</name> </author> <summary> 问题1 kkfile 无法访问解决方案中附件 具体报错为某个文件地址 filenotfoud java.net.UnknownHostException: 解决方法 去掉docker 配置文件中”dns” : [“114.114.114.114”,”8.8.8.8”] 则可以正常访问 至于为什么加这一段是因为之前访问不了外网才加的 问题2 docker容器之间互相访问的问题，kkfile需要访问redis，由于容器重启ip不固定 解决方法 需要在kkfile run的时候就做好链接 –link 容器名:别名 ，一致则用一个就行 docker run --restart=always -d \ -e KK_BASE_URL="https://m.cicdi.com/jjfapt/kkfile" \ -e KK_CONTEXT_PATH="/kkfile" \ -... </summary> </entry> </feed>
